================
grantRolesToRole
================

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: grantRolesToRole

   Add additional roles to a :ref:`user-defined <user-defined-roles>`
   role.

   The :dbcommand:`grantRolesToRole` command affects roles on the
   database where the command runs. :dbcommand:`grantRolesToRole` has
   the following syntax:

   .. code-block:: javascript

      { grantRolesToRole: "<role>",
        roles: [
                   { role: "<role>", db: "<database>" },
                   ...
               ],
        writeConcern: { <write concern> }
      }

   The :dbcommand:`grantRolesToRole` command has the following fields:

   .. include:: /reference/command/grantRolesToRole-field.rst

   .. |local-cmd-name| replace:: :dbcommand:`grantRolesToRole`
   .. include:: /includes/fact-roles-array-contents.rst

Required Access
---------------

To grant a role, a user must have access that includes the
:authaction:`grantRole` action on the relevant database.

Example
-------

.. TODO This example

The following :dbcommand:`grantRolesToRole` command updates the
``productsReaderWriter`` role to inherit the privileges of
``productsReader``:

.. code-block:: javascript

   { grantRolesToRole: "productsReaderWriter",
     roles: [
              { role: "productsReader", db: "products"}
     ],
     writeConcern: { w: "majority" , wtimeout: 5000 }
   }
